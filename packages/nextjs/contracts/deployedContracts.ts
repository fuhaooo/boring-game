/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    BoringGame: {
      address:
        "0x3e4aa5993cc45e05bd5ffa6789d883e1632e4a5df73caec16d8e4010c517719",
      abi: [
        {
          name: "BoringGameImpl",
          type: "impl",
          interface_name: "contracts::BoringGame::IBoringGame",
        },
        {
          name: "core::bool",
          type: "enum",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          name: "core::integer::u256",
          type: "struct",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          name: "contracts::BoringGame::IBoringGame",
          type: "interface",
          items: [
            {
              name: "start_game",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
            {
              name: "record_score",
              type: "function",
              inputs: [
                {
                  name: "score",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              name: "mint_achievement_nft",
              type: "function",
              inputs: [
                {
                  name: "achievement_id",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
            {
              name: "get_player_info",
              type: "function",
              inputs: [
                {
                  name: "player",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "(core::integer::u256, core::integer::u256, core::integer::u256)",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "get_achievement",
              type: "function",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "(core::integer::u8, core::felt252, core::felt252, core::integer::u256)",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "is_achievement_unlocked",
              type: "function",
              inputs: [
                {
                  name: "player",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "achievement_id",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          name: "OwnableImpl",
          type: "impl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          name: "openzeppelin_access::ownable::interface::IOwnable",
          type: "interface",
          items: [
            {
              name: "owner",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "transfer_ownership",
              type: "function",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              name: "renounce_ownership",
              type: "function",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          name: "constructor",
          type: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          kind: "struct",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          type: "event",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          kind: "struct",
          name: "contracts::BoringGame::BoringGame::GameStarted",
          type: "event",
          members: [
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "timestamp",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          kind: "struct",
          name: "contracts::BoringGame::BoringGame::AchievementUnlocked",
          type: "event",
          members: [
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "achievement_id",
              type: "core::integer::u8",
              kind: "data",
            },
          ],
        },
        {
          kind: "struct",
          name: "contracts::BoringGame::BoringGame::NFTMinted",
          type: "event",
          members: [
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "achievement_id",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          kind: "enum",
          name: "contracts::BoringGame::BoringGame::Event",
          type: "event",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "nested",
            },
            {
              name: "GameStarted",
              type: "contracts::BoringGame::BoringGame::GameStarted",
              kind: "nested",
            },
            {
              name: "AchievementUnlocked",
              type: "contracts::BoringGame::BoringGame::AchievementUnlocked",
              kind: "nested",
            },
            {
              name: "NFTMinted",
              type: "contracts::BoringGame::BoringGame::NFTMinted",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x3f5a9d8caf72a82b2f2fb7a7c0e24e1234567890abcdef0123456789abcdef01",
    },
  },
  sepolia: {
    BoringGame: {
      address:
        "0x3e4aa5993cc45e05bd5ffa6789d883e1632e4a5df73caec16d8e4010c517719",
      abi: [
        {
          name: "BoringGameImpl",
          type: "impl",
          interface_name: "contracts::BoringGame::IBoringGame",
        },
        {
          name: "core::bool",
          type: "enum",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          name: "core::integer::u256",
          type: "struct",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          name: "contracts::BoringGame::IBoringGame",
          type: "interface",
          items: [
            {
              name: "start_game",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
            {
              name: "record_score",
              type: "function",
              inputs: [
                {
                  name: "score",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              name: "mint_achievement_nft",
              type: "function",
              inputs: [
                {
                  name: "achievement_id",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
            {
              name: "get_player_info",
              type: "function",
              inputs: [
                {
                  name: "player",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "(core::integer::u256, core::integer::u256, core::integer::u256)",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "get_achievement",
              type: "function",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "(core::integer::u8, core::felt252, core::felt252, core::integer::u256)",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "is_achievement_unlocked",
              type: "function",
              inputs: [
                {
                  name: "player",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "achievement_id",
                  type: "core::integer::u8",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          name: "OwnableImpl",
          type: "impl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          name: "openzeppelin_access::ownable::interface::IOwnable",
          type: "interface",
          items: [
            {
              name: "owner",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "transfer_ownership",
              type: "function",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              name: "renounce_ownership",
              type: "function",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          name: "constructor",
          type: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          kind: "struct",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          type: "event",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          kind: "struct",
          name: "contracts::BoringGame::BoringGame::GameStarted",
          type: "event",
          members: [
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "timestamp",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          kind: "struct",
          name: "contracts::BoringGame::BoringGame::AchievementUnlocked",
          type: "event",
          members: [
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "achievement_id",
              type: "core::integer::u8",
              kind: "data",
            },
          ],
        },
        {
          kind: "struct",
          name: "contracts::BoringGame::BoringGame::NFTMinted",
          type: "event",
          members: [
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "achievement_id",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          kind: "enum",
          name: "contracts::BoringGame::BoringGame::Event",
          type: "event",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "nested",
            },
            {
              name: "GameStarted",
              type: "contracts::BoringGame::BoringGame::GameStarted",
              kind: "nested",
            },
            {
              name: "AchievementUnlocked",
              type: "contracts::BoringGame::BoringGame::AchievementUnlocked",
              kind: "nested",
            },
            {
              name: "NFTMinted",
              type: "contracts::BoringGame::BoringGame::NFTMinted",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x3f5a9d8caf72a82b2f2fb7a7c0e24e1234567890abcdef0123456789abcdef01",
    },
  },
} as const;

export default deployedContracts;
